name: POI CICD

env:
  poi_path: poi/**
  registry: docker.pkg.github.com
  repository: brajeshkumar89/poi-api-dotnet-health-check/poi
  docker_path: poi/web
  staging_url: https://openhackxv61mxh2poi-staging.azurewebsites.net
  prod_url: https://openhackxv61mxh2poi.azurewebsites.net
  resource_group: openhackxv61mxh2rg
  webapp_name: openhackxv61mxh2poi
  build_name: POI

on:
  push:
    branches: [ main ]
    paths: 
      - poi/**  
      - .github/workflows/poimain.yml
  pull_request:
    branches: [ main ]
    paths: 
      - poi/**
      - .github/workflows/poimain.yml

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.202'
    - name: Add Code Coverage Tools
      working-directory: poi/tests/UnitTests
      run: dotnet add package coverlet.msbuild

    - name: Install dependencies
      run: dotnet restore poi/web/*.csproj
      
    - name: .NET Build Web
      run: dotnet build --configuration Release --no-restore poi/web/*.csproj

    - name: .NET Build Unit Tests
      run: dotnet build --configuration Release poi/tests/UnitTests/UnitTests.csproj

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
  docker_build_and_push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:     
    - uses: actions/checkout@v2

    - name: Docker login     
      run: docker login $registry -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.GITHUB_TOKEN }}

    - name: Docker build
      run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path

    - name: Docker Push
      run: docker push $registry/$repository:${{github.run_number}}  

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });

